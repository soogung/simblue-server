spring:
  profiles:
    active: local

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  jpa:
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect

    generate-ddl: true
    hibernate:
      ddl-auto: validate

  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    driver-class-name: org.postgresql.Driver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    password: ${REDIS_PASSWORD}

  cache:
    type: redis

  servlet:
    multipart:
      max-file-size: 1MB

auth:
  google:
    base-url: ${GOOGLE_BASE_URL}
    client-id: ${GOOGLE_CLIENT}
    client-secret: ${GOOGLE_SECRET}
    simblue-redirect-url: ${SIMBLUE_GOOGLE_REDIRECT}
    ssamblue-redirect-url: ${SSAMBLUE_GOOGLE_REDIRECT}

jwt:
  refresh-time: 2592000000 # 30일
  access-time: 3600000 # 1시간
  prefix: Bearer
  header: Authorization
  secret-key: ${JWT_SECRET}

cloud:
  aws:
    s3:
      bucket: ${BUCKET_NAME}
    stack:
      auto: false
    region:
      static: ${S3_REGION}
    credentials:
      instance-profile: true
      access-key: ${S3_ACCESS_KEY}
      secret-key: ${S3_SECRET_KEY}

logging:
  level:
    com.amazonaws.util.EC2MetadataUtils: error
---
spring:
  config:
    activate:
      on-profile: dev

debug: true
---
spring:
  config:
    activate:
      on-profile: prod
---
spring:
  config:
    activate:
      on-profile: local

  jpa:
    properties:
      hibernate:
        format_sql: true

    generate-ddl: true
    hibernate:
      ddl-auto: update

  datasource:
    url: jdbc:postgresql://127.0.0.1:5432/soolung_simblue
    driver-class-name: org.postgresql.Driver
    username: soolung
    password: soolung

  redis:
    host: localhost
    password: soolung

server:
  port: 9090

debug: true